/* Generated by Yosys 0.16+41 (git sha1 29c0a5958, clang 11.0.1-2 -fPIC -Os) */

(* src = "tests/fsm.sv:1.1-46.10" *)
module fsm(clock, reset, STB_I, CYC_I, WE_I, out);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  (* src = "tests/fsm.sv:5.9-5.14" *)
  input CYC_I;
  wire CYC_I;
  (* src = "tests/fsm.sv:4.9-4.14" *)
  input STB_I;
  wire STB_I;
  (* src = "tests/fsm.sv:6.9-6.13" *)
  input WE_I;
  wire WE_I;
  (* src = "tests/fsm.sv:2.9-2.14" *)
  input clock;
  wire clock;
  (* src = "tests/fsm.sv:7.16-7.19" *)
  output [2:0] out;
  wire [2:0] out;
  (* src = "tests/fsm.sv:3.9-3.14" *)
  input reset;
  wire reset;
  (* enum_value_000 = "\\STATE_IDLE" *)
  (* enum_value_001 = "\\STATE_READ" *)
  (* enum_value_010 = "\\STATE_READ_2" *)
  (* enum_value_011 = "\\STATE_WRITE" *)
  (* enum_value_100 = "\\STATE_WRITE_2" *)
  (* enum_value_101 = "\\STATE_WRITE_3" *)
  (* enum_value_110 = "\\STATE_DONE" *)
  (* src = "tests/fsm.sv:20.11-20.16" *)
  (* wiretype = "\\state_t" *)
  wire [2:0] state;
  assign _06_ = ~state[1];
  assign _03_ = ~WE_I;
  assign _01_ = ~(_06_ & state[0]);
  assign _04_ = _06_ & CYC_I;
  assign _05_ = ~(STB_I & _04_);
  assign _00_ = ~(_01_ & _05_);
  assign _02_ = ~(_03_ & _01_);
  reg \state_reg[0] ;
  (* \always_ff  = 32'd1 *)
  (* src = "tests/fsm.sv:22.3-42.6" *)
  always @(posedge clock)
    if (reset) \state_reg[0]  <= 1'h0;
    else if (_00_) \state_reg[0]  <= _01_;
  assign state[0] = \state_reg[0] ;
  reg \state_reg[1] ;
  (* \always_ff  = 32'd1 *)
  (* src = "tests/fsm.sv:22.3-42.6" *)
  always @(posedge clock)
    if (reset) \state_reg[1]  <= 1'h0;
    else if (_00_) \state_reg[1]  <= _02_;
  assign state[1] = \state_reg[1] ;
  assign out = { 1'h0, state[1:0] };
  assign state[2] = 1'h0;
endmodule
