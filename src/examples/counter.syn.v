/* Generated by Yosys 0.16+41 (git sha1 29c0a5958, clang 11.0.1-2 -fPIC -Os) */

(* top =  1  *)
(* src = "examples/counter.v:34.1-68.10" *)
module counter(clock, reset, button_debounced, ones, tens);
  (* src = "examples/counter.v:46.3-63.6" *)
  wire _00_;
  (* src = "examples/counter.v:46.3-63.6" *)
  wire [3:0] _01_;
  (* src = "examples/counter.v:46.3-63.6" *)
  wire [3:0] _02_;
  (* src = "examples/counter.v:57.23-57.38" *)
  wire [3:0] _03_;
  (* src = "examples/counter.v:59.23-59.38" *)
  wire [3:0] _04_;
  (* src = "examples/counter.v:55.13-55.29" *)
  wire _05_;
  (* src = "examples/counter.v:54.11-54.52" *)
  wire _06_;
  (* src = "examples/counter.v:54.31-54.52" *)
  wire _07_;
  wire [3:0] _08_;
  wire [3:0] _09_;
  wire [3:0] _10_;
  wire [3:0] _11_;
  (* src = "examples/counter.v:37.9-37.25" *)
  input button_debounced;
  wire button_debounced;
  (* src = "examples/counter.v:44.7-44.27" *)
  reg button_debounced_reg;
  (* src = "examples/counter.v:35.9-35.14" *)
  input clock;
  wire clock;
  (* src = "examples/counter.v:38.16-38.20" *)
  output [3:0] ones;
  wire [3:0] ones;
  (* src = "examples/counter.v:42.13-42.21" *)
  reg [3:0] ones_reg;
  (* src = "examples/counter.v:36.9-36.14" *)
  input reset;
  wire reset;
  (* src = "examples/counter.v:39.16-39.20" *)
  output [3:0] tens;
  wire [3:0] tens;
  (* src = "examples/counter.v:43.13-43.21" *)
  reg [3:0] tens_reg;
  assign _03_ = tens_reg + (* src = "examples/counter.v:57.23-57.38" *) 1'h1;
  assign _04_ = ones_reg + (* src = "examples/counter.v:59.23-59.38" *) 1'h1;
  assign _05_ = ones_reg == (* src = "examples/counter.v:55.13-55.29" *) 4'h9;
  assign _06_ = button_debounced && (* src = "examples/counter.v:54.11-54.52" *) _07_;
  assign _07_ = ! (* src = "examples/counter.v:54.31-54.52" *) button_debounced_reg;
  (* src = "examples/counter.v:46.3-63.6" *)
  always @(posedge clock)
    button_debounced_reg <= _00_;
  (* src = "examples/counter.v:46.3-63.6" *)
  always @(posedge clock)
    ones_reg <= _01_;
  (* src = "examples/counter.v:46.3-63.6" *)
  always @(posedge clock)
    tens_reg <= _02_;
  assign _00_ = reset ? (* full_case = 32'd1 *) (* src = "examples/counter.v:47.9-47.14|examples/counter.v:47.5-62.8" *) 1'h0 : button_debounced;
  assign _08_ = _05_ ? (* full_case = 32'd1 *) (* src = "examples/counter.v:55.13-55.29|examples/counter.v:55.9-60.12" *) _03_ : tens_reg;
  assign _09_ = _06_ ? (* src = "examples/counter.v:54.11-54.52|examples/counter.v:54.7-61.10" *) _08_ : tens_reg;
  assign _02_ = reset ? (* full_case = 32'd1 *) (* src = "examples/counter.v:47.9-47.14|examples/counter.v:47.5-62.8" *) 4'h0 : _09_;
  assign _10_ = _05_ ? (* full_case = 32'd1 *) (* src = "examples/counter.v:55.13-55.29|examples/counter.v:55.9-60.12" *) 4'h0 : _04_;
  assign _11_ = _06_ ? (* src = "examples/counter.v:54.11-54.52|examples/counter.v:54.7-61.10" *) _10_ : ones_reg;
  assign _01_ = reset ? (* full_case = 32'd1 *) (* src = "examples/counter.v:47.9-47.14|examples/counter.v:47.5-62.8" *) 4'h0 : _11_;
  assign ones = ones_reg;
  assign tens = tens_reg;
endmodule
